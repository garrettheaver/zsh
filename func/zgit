zgit_prompt() {
  zgit_is_repo || return
  
  # grab the name of the branch we're on
  zgit_branch=$(git name-rev --name-only --no-undefined --always HEAD 2>/dev/null)
  if [ -z $zgit_branch ]; then
    zgit_branch="master"
  fi
  
  # find out how long its been since we last committed
  sys_timestamp=$(date +%s)
  git_timestamp=$(git log -n1 --pretty=format:%at 2>/dev/null)
  
  if [ -z $git_timestamp ]; then
    commit_message="$fg[red]∞"
  elif zgit_has_any_modifications; then
    
    file_timestamp=$(git status --porcelain | cut -c4- | xargs stat -f "%m" -t "%x" | sort | head -n1)
    commit_timespan=$((($sys_timestamp - $file_timestamp) / 60))
    
    # decide what color the time should be
    if [ $commit_timespan -le 20 ]; then
      commit_message="$fg[green]"
    elif [ $commit_timespan -le 40 ]; then
      commit_message="$fg[yellow]"
    else
      commit_message="$fg[red]"
    fi
    
    commit_message+=$commit_timespan"m"
  else
    commit_message="$fg[default]≡"
  fi
  
  echo "$fg[white]:$fg[red]$fg[white][$fg[cyan]$zgit_branch$fg[white]|$commit_message$fg[white]]"
}

zgit_is_repo() {
  if [ -z $(git rev-parse --git-dir 2>/dev/null) ]; then
    return 1
  else
    return 0
  fi
}

zgit_has_any_modifications() {
  local -a modified_files
  modified_files=($((git status --porcelain | cut -c4-) 2>/dev/null))
  if [ $#modified_files -gt 0 ]; then
    return 0
  else
    return 1
  fi
}